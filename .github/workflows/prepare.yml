# Parses migration issue and creates a comment with next step
#

name: New Repo (Prepare)

on:
  issues:
    types: [opened, edited]

jobs:
  prepare:
    name: Prepare Migration
    runs-on: ubuntu-latest

    if: github.event_name == 'issues' &&
      (github.event.action == 'opened' || github.event.action == 'edited') &&
      contains(github.event.issue.labels.*.name, 'new-repo')

    steps:
      - name: Check out scripts
        uses: actions/checkout@v3

      - name: Print Context
        uses: actions/github-script@v5
        with:
          script: |
            console.log(context)
            
      - uses: stefanbuck/github-issue-parser@v2
        id: issue-parser
        # with:
          # template-path: .github/ISSUE_TEMPLATE/bug-report.yml

      - run: echo '${{ steps.issue-parser.outputs.jsonString }}' > parsed-issue.json
      
      - run: cat parsed-issue.json
      
      - run: echo "${{ steps.issue-parser.outputs.issueparser_repo_name }}"

      - name: Post prepare message
        uses: actions/github-script@v5
        with:
          script: |
            const options = { targetOrganization: '${{ github.REPOSITORY_OWNER }}' }
            await require('./.github/scripts/prepare.js')({github, context, options})

      - name: Post failure message
        if: ${{ failure() }}
        uses: actions/github-script@v5
        with:
          script: |
            let commentBody
            commentBody = `ðŸ˜¢ The issue body could not be parsed. Please open a new issue using an issue template.`
            await github.rest.issues.createComment({
              issue_number: ${{ github.event.issue.number }},
              owner: '${{ github.REPOSITORY_OWNER }}',
              repo: '${{ github.event.repository.name }}',
              body: commentBody.replace(/  +/g, '')
            })
