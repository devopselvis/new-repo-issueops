# Parses migration issue and creates a comment with next step
#

name: Prepare

on:
  issues:
    types: [opened, edited]

jobs:
  prepare:
    name: Prepare Migration
    runs-on: ubuntu-latest

    if: github.event_name == 'issues' &&
      (github.event.action == 'opened' || github.event.action == 'edited') &&
      contains(github.event.issue.labels.*.name, 'new-repo')

    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/new-repo.yml

      - name: Set env vars
        run: | 
          echo "REPO_NAME=${{ steps.issue-parser.outputs.issueparser_repo_name }}" >> $GITHUB_ENV
          echo "REPO_DESCRIPTION=${{ steps.issue-parser.outputs.issueparser_repo_description }}" >> $GITHUB_ENV
          echo "REPO_VISIBILITY=${{ steps.issue-parser.outputs.issueparser_repo_visibility }}" >> $GITHUB_ENV

      - name: Post prepare message
        uses: actions/github-script@v6
        with:
          script: |
            let commentBody
            commentBody = `ðŸ‘‹ Thank you for opening this new repo issue, @${{ github.actor }}.

            The following has been parsed from your issue body:
            - The **repo name** is set to be: **\`${{ env.REPO_NAME }}\`**
            - The **repo description** is set to be: **\`${{ env.REPO_DESCRIPTION }}\`**
            - The **repo visibility** is set to be: **\`${{ env.REPO_VISIBILITY }}\`**

            ## Create the repo

            Add the following comment to this issue in order to create the repo:
          
            \`\`\`
            /create-repo
            \`\`\`
            `

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.name,
              issue_number: context.issue.number,
              body: commentBody.replace(/  +/g, '')
            })
            
      - name: Post failure message
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            let commentBody
            commentBody = `ðŸ˜¢ The issue body could not be parsed, @${{ github.actor }}. Please open a new issue using the issue template and ensure your formatting and line spacing remains untouched.`
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.name,
              issue_number: context.issue.number,
              body: commentBody.replace(/  +/g, '')
            })
