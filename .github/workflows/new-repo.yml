name: Create repository with IssueOps
on:
  issue_comment:
    types: [created]

jobs:
  Create-Repo:
    runs-on: ubuntu-latest
    if: github.event_name == 'issue_comment' &&
      (startsWith(github.event.comment.body, '/create-repo') &&
      contains(github.event.issue.labels.*.name, 'new-repo'))
    steps:
        
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"

    - uses: stefanbuck/github-issue-parser@v2
      id: issue-parser

    - name: create repo
      env: 
        GH_TOKEN: ${{secrets.ADMIN_TOKEN}}
      run: |  
        echo "repo name = ${{ steps.issue-parser.outputs.issueparser_repo_name }}"
        echo "team write permissions = ${{ steps.issue-parser.outputs.issueparser_team_write_permissions }}"
        echo "team admin permissions = ${{ steps.issue-parser.outputs.issueparser_team_admin_permissions }}"
        echo "enable issues = ${{ steps.issue-parser.outputs.issueparser_yes_i_want_to_enable_issues }}"
        echo "enable projects = ${{ steps.issue-parser.outputs.issueparser_yes_i_want_to_enable_projects }}"

        gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          /orgs/${{ github.REPOSITORY_OWNER }}/repos \
          -f name='${{ steps.issue-parser.outputs.issueparser_repo_name }}' \
          -F visibility=private \
          -F has_issues=${{ steps.issue-parser.outputs.issueparser_yes_i_want_to_enable_issues }} \
          -F has_projects=${{ steps.issue-parser.outputs.issueparser_yes_i_want_to_enable_projects }}
        
        # to do - add write/admin team to repo
        # https://docs.github.com/en/rest/teams/teams#add-or-update-team-repository-permissions
